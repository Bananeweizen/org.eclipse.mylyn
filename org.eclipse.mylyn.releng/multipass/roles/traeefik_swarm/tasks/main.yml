---
- name: Creates directory
  ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'
  loop:
    - "/mylyn-runtime-dir/{{ role_name }}/data/logs"
    - "/mylyn-config-dir/{{ role_name }}/etc-traefik"
#    - "/mylyn-config-dir/{{ role_name }}/certs"

#- name: Synchronization root ca
#  ansible.posix.synchronize:
#    src: "{{ item.src }}"
#    dest: "{{ item.dest }}"
#  delegate_to: "{{ groups[hostvars['localhost'].grp_prefix + \"_admin\"][0] }}"
#  loop:
#    - {src: "/cacerts/root_ca/{{ groups[hostvars['localhost'].grp_prefix + \"_admin\"][0] }}.crt", dest: "/mylyn-config-dir/{{ role_name }}/certs/rootca.crt"}
#    - {src: "/cacerts/root_ca/{{ groups[hostvars['localhost'].grp_prefix + \"_admin\"][0] }}.key", dest: "/mylyn-config-dir/{{ role_name }}/certs/rootca.key"}
#- name: get worker certificates
#  ansible.posix.synchronize:
#    src:  "/cacerts/server_ca/"
#    dest: /mylyn-config-dir/{{ role_name }}/certs
#  delegate_to: "{{ item }}"
#  with_items: 
#    - "{{ groups[hostvars['localhost'].grp_prefix + \"_hosts\"] }}"
#

- name: Template  files
  ansible.builtin.template:
    src: "templates/{{ item.name }}.j2"
    dest: "/mylyn-config-dir/{{ role_name }}{{ item.path }}/{{ item.name }}"
    mode: '0644'
  loop:
    - { path: /etc-traefik, name: traefik.yml }
    - { path: /etc-traefik, name: traefik.dynamic.yml }

- name: Pull  image
  community.docker.docker_image:
    name: traefik:latest
    source: pull

- name: Merge node labels and new labels
  community.docker.docker_node:
    hostname: "{{ inventory_hostname }}"
    labels:
      proxy: 'true'

- name: Deploy swarm service
  community.docker.docker_swarm_service:
    name: traefik
    image: traefik:latest
    mode: global
    args:
      - "--configFile=/etc/traefik/traefik.yml"
    publish:       
      - published_port: "80"
        target_port: "80"
      - published_port: "443"
        target_port: "443"
    networks:
      - ruvzcx_net
    placement:
      constraints:
        - node.role == manager
    mounts:
      - source: "/var/run/docker.sock"
        target: "/var/run/docker.sock"
        type: bind
      - source: "/mylyn-runtime-dir/{{ role_name }}/data/logs"
        target: "/logs"
        type: bind
      - source: "/mylyn-config-dir/{{ role_name }}/etc-traefik"
        target: "/etc/traefik"
        type: bind
      - source: "/mylyn-config-dir/certs"
        target: "/certificates"
        type: bind
    labels:
      traefik.enable: "true"
      traefik.docker.network: ruvzcx_net

      traefik.http.routers.http-catchall.rule: hostregexp(`{host:.+}`)
      traefik.http.routers.http-catchall.entrypoints: web
      traefik.http.routers.http-catchall.middlewares: redirect-to-https
      traefik.http.middlewares.redirect-to-https.redirectscheme.scheme: https

      traefik.http.routers.api_traefik.rule: Host(`traefik.{{common_domain_name}}`)
      traefik.http.routers.api_traefik.service: api@internal
      traefik.http.routers.api_traefik.entrypoints: websecure
      traefik.http.routers.api_traefik.tls: "true"
      traefik.http.routers.api_traefik1.rule: Host(`{{common_domain_name}}`) && (PathPrefix(`/traefikdashboard`) || PathPrefix(`/api`))
      traefik.http.routers.api_traefik1.service: api@internal
      traefik.http.routers.api_traefik1.entrypoints: websecure
      traefik.http.routers.api_traefik1.tls: "true"
      traefik.http.routers.api_traefik1.middlewares: stripprefix_api
      traefik.http.middlewares.stripprefix_api.stripprefix.prefixes: /traefikdashboard
      
      traefik.http.services.api.loadbalancer.passhostheader: "true"
      traefik.http.services.api.loadbalancer.server.port: "8080" 

- name: Create secret foo (from a file on the target machine)
  community.docker.docker_secret:
    name: master.crt
    data_src: "/mylyn-config-dir/certs/{{ groups[hostvars['localhost'].grp_prefix + \"_swarm_master\"][0] }}.crt"
    state: present
- name: Create secret foo (from a file on the target machine)
  community.docker.docker_secret:
    name: master.key
    data_src: "/mylyn-config-dir/certs/{{ groups[hostvars['localhost'].grp_prefix + \"_swarm_master\"][0] }}.key"
    state: present

- name: delete data-volume
  community.docker.docker_volume:
    name: "registry-data-volume"
    state: absent

- name: create data-volume
  community.docker.docker_volume:
    name: "registry-data-volume"
    state: present

- name: local registry
  community.docker.docker_swarm_service:
    name: registry
    image: registry:2
    publish:       
      - published_port: "5000"
        target_port: "5000"
    mounts:
      - source: "registry-data-volume"
        target: "/var/lib/registry"
        type: volume
    env:
      REGISTRY_HTTP_ADDR: 0.0.0.0:5000
      REGISTRY_HTTP_TLS_CERTIFICATE: /run/secrets/master.crt
      REGISTRY_HTTP_TLS_KEY: /run/secrets/master.key
    placement:
      constraints:
        - node.role == manager
    replicas: 1
    secrets:
      - secret_name: master.crt
      - secret_name: master.key
